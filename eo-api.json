{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.1",
    "title": "API Documentation",
    "description": "Welcome to the API Documentation for custom endpoints created by the Eyesover Team for their customers.",
    "contact": {
      "url": "https://www.eyesover.com/contact/",
      "name": "Eyesover Support",
      "email": "support@eyesover.com"
    },
    "license": {
      "url": "www.eyesover.com",
      "name": "Private-Use-Only"
    }
  },
  "servers": [
    {
      "url": "https://api-custom.eyesover.com/nucleus"
    }
  ],
  "paths": {
    "/entity/labels": {
      "get": {
        "summary": "returns the entity labels",
        "description": "Returns the entity labels used by the Eyesover system to label data\n",
        "operationId": "entityLabels",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "pass the id of the client for whom the data is being requested",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "examples": [
                "dtjb"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of entities the system is using to label content and stats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "examples": [
                    [
                      "Coca-Cola",
                      "Pepsi"
                    ]
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "examples": {
                  "default": {
                    "value": [
                      "Coca-Cola",
                      "Pepsi"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "not authorized to access this resource"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "servers": [
          {
            "url": "https://api-custom.eyesover.com/nucleus"
          }
        ]
      }
    },
    "/topic/labels": {
      "get": {
        "summary": "returns the topic labels",
        "description": "Returns the topic labels used by the Eyesover system to label data\n",
        "operationId": "topicLabels",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "pass the id of the client for whom the data is being requested",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "examples": [
                "dtjb"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of topics the system is using to label content and stats",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "examples": [
                    [
                      "Sugar Consumption",
                      "Boycott"
                    ]
                  ],
                  "items": {
                    "type": "string"
                  }
                },
                "examples": {
                  "default": {
                    "value": [
                      "Sugar Consumption",
                      "Boycott"
                    ]
                  }
                }
              }
            }
          },
          "403": {
            "description": "not authorized to access this resource"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "servers": [
          {
            "url": "https://api-custom.eyesover.com/nucleus"
          }
        ]
      }
    },
    "/topic/stats": {
      "get": {
        "summary": "returns topic stats",
        "description": "Returns the sentiment and talking about status for every topic mentioned in this day's conversations\n",
        "operationId": "getTopicStats",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "pass the id of the client for whom the data is being requested",
            "required": true,
            "schema": {
              "type": "string",
              "examples": [
                "dtjb"
              ]
            }
          },
          {
            "name": "entity",
            "in": "query",
            "description": "Returns topic stats related to the Entity provided. The entity must match the label used by Eyesover (find entity labels at `.../entity/labels` endpoint)\n",
            "schema": {
              "type": "string",
              "examples": [
                "Donald Trump"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of topics with the day's sentiment and talking about stats",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TopicStatsResponse"
                }
              }
            }
          },
          "403": {
            "description": "not authorized to access this resource"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "servers": [
          {
            "url": "https://api-custom.eyesover.com/nucleus"
          }
        ]
      }
    },
    "/content": {
      "get": {
        "summary": "returns social media content",
        "description": "Returns the social media content that matches the search params used in the request\n",
        "operationId": "searchContent",
        "parameters": [
          {
            "name": "clientId",
            "in": "query",
            "description": "pass the id of the client for whom the data is being requested",
            "required": true,
            "schema": {
              "type": "string",
              "examples": [
                "dtjb"
              ]
            }
          },
          {
            "name": "source",
            "in": "query",
            "description": "Returns content from the specified social media source(s). When no param are given, the default will be to return only News and Twitter sources (e.g. `source=news,twitter`)\n",
            "style": "form",
            "explode": false,
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "news",
                  "twitter",
                  "youtube",
                  "facebook_post",
                  "facebook_comment",
                  "reddit"
                ]
              }
            }
          },
          {
            "name": "since",
            "in": "query",
            "description": "Returns content created _after_ the given date. Date should be formatted as `YYYY-MM-DDTHH:MM:SS±HHMM` (or `YYYY-MM-DDTHH:MM:SSZ`).\n\nNote: when this parameter is used, the content is returned in _reverse_ chronological order. Otherwise it is returned chronologically.\n",
            "schema": {
              "type": "string",
              "examples": [
                "2023-06-08T04:00:00+0400"
              ]
            }
          },
          {
            "name": "until",
            "in": "query",
            "description": "Returns content created _before_ the given date. Date should be formatted as `YYYY-MM-DDTHH:MM:SS±HHMM` (or `YYYY-MM-DDTHH:MM:SSZ`).\n",
            "schema": {
              "type": "string",
              "examples": [
                "2023-06-30T04:00:00+0400"
              ]
            }
          },
          {
            "name": "entity",
            "in": "query",
            "description": "Returns content referencing the Entity provided. The entity must match the label used by Eyesover (find entity labels at `.../entity/labels` endpoint)\n",
            "schema": {
              "type": "string",
              "examples": [
                "Donald Trump"
              ]
            }
          },
          {
            "name": "topic",
            "in": "query",
            "description": "Returns content referencing the Topic provided. The topic must match the label used by Eyesover (find topic labels at `.../topic/labels` endpoint)\n",
            "schema": {
              "type": "string",
              "examples": [
                "Border Security"
              ]
            }
          },
          {
            "name": "next",
            "in": "query",
            "description": "_For pagination only_\n\nIf the search has more content than can be returned in one call, a `next` page token will be attached to the content results.\n\nNOTE: you MUST still provide the `clientId` parameter. No other parameters besides the `clientId` and the `next` key will be observed by the API\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prev",
            "in": "query",
            "description": "_For pagination only_\n\nUse this parameter to page (backwards) to the previous page you were just on.\n\nNOTE: you MUST still provide the `clientId` parameter. No other parameters besides the `clientId` and the `prev` key will be observed by the API\n",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of social media content matching criteria provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContentResponse"
                }
              }
            }
          },
          "403": {
            "description": "not authorized to access this resource"
          },
          "422": {
            "description": "bad input parameter(s)"
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "servers": [
          {
            "url": "https://api-custom.eyesover.com/nucleus"
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "x-api-key",
        "in": "header"
      }
    },
    "schemas": {
      "TopicStatsResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "overall": {
                "type": "object",
                "description": "Overall stats based on the parameters provided",
                "properties": {
                  "entity": {
                    "type": "string",
                    "description": "Name of the entity provided in the parameters (or 'All Entities')"
                  },
                  "ta": {
                    "type": "integer",
                    "description": "Number of people talking about this entity over the past day"
                  },
                  "sent": {
                    "type": "number",
                    "description": "The sentiment of all the people talking about this entity over the past day"
                  }
                }
              },
              "topics": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "ta": {
                      "type": "integer",
                      "description": "Number of people talking about this topic (and entity, if provided) over the past day"
                    },
                    "sent": {
                      "type": "number",
                      "description": "The sentiment of all the people talking about this topic (and entity, if provided) over the past day"
                    },
                    "topic": {
                      "type": "string",
                      "description": "The topic that is being discussed"
                    },
                    "category": {
                      "type": "string",
                      "description": "The broader category that the topic being discussed falls under"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "ContentResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "description": "Content objects matching the parameters given",
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/NewsItem"
                },
                {
                  "$ref": "#/components/schemas/TwitterItem"
                },
                {
                  "$ref": "#/components/schemas/YoutubeItem"
                },
                {
                  "$ref": "#/components/schemas/RedditItem"
                },
                {
                  "$ref": "#/components/schemas/FacebookPostItem"
                },
                {
                  "$ref": "#/components/schemas/FacebookCommentItem"
                }
              ]
            }
          },
          "pagination": {
            "type": "object",
            "properties": {
              "next": {
                "type": "string",
                "description": "Token for the _next_ page of search results",
                "examples": [
                  "e32dbef8d4967b716dffade149e4513d"
                ]
              },
              "prev": {
                "type": "string",
                "description": "Token for the _previous_ page of search results",
                "examples": [
                  "94d29aa2ed39f2050e6e2d0b817e9f41"
                ]
              }
            }
          }
        }
      },
      "NewsItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID representing this particular news article"
          },
          "src": {
            "type": "string",
            "description": "Social media source",
            "examples": [
              "news"
            ]
          },
          "date": {
            "type": "string",
            "description": "Date content was published",
            "format": "date-time"
          },
          "title": {
            "type": "string",
            "description": "Title of the news article"
          },
          "content": {
            "type": "string",
            "description": "Summary of the news article"
          },
          "author": {
            "type": "object",
            "description": "Details about the publisher/author of the news article",
            "properties": {
              "url": {
                "type": "string",
                "description": "link to the Publisher's home page"
              }
            },
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseAuthorItem"
              },
              {
                "type": "object"
              }
            ]
          },
          "source_url": {
            "type": "string",
            "description": "Link to the news article",
            "format": "url"
          },
          "img_url": {
            "type": "string",
            "description": "Link to the news article's main image, if one of was found",
            "format": "url"
          },
          "topics": {
            "$ref": "#/components/schemas/ContentTopicArray",
            "description": "List of Topics identified in the content"
          },
          "entities": {
            "$ref": "#/components/schemas/ContentEntityArray",
            "description": "List of Entities identified in the content"
          }
        },
        "required": [
          "id",
          "src",
          "date",
          "content",
          "author",
          "source_url",
          "topics",
          "entities"
        ]
      },
      "BaseAuthorItem": {
        "type": "object",
        "properties": {
          "author_id": {
            "type": "string"
          },
          "author_name": {
            "type": "string"
          }
        },
        "required": [
          "author_id",
          "author_name"
        ]
      },
      "ContentTopicArray": {
        "type": "array",
        "uniqueItems": true,
        "items": {
          "type": "string"
        }
      },
      "ContentEntityArray": {
        "type": "array",
        "uniqueItems": true,
        "items": {
          "type": "string"
        }
      },
      "TwitterItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the Tweet from Twitter's API",
            "format": "long"
          },
          "src": {
            "type": "string",
            "description": "Social media source",
            "examples": [
              "twitter"
            ]
          },
          "date": {
            "type": "string",
            "description": "Date content was published",
            "format": "date-time"
          },
          "content": {
            "type": "string",
            "description": "Tweet's content"
          },
          "author": {
            "type": "object",
            "description": "Details about the Tweet author",
            "properties": {
              "username": {
                "type": "string",
                "description": "handle/username of the Tweet's author"
              }
            },
            "required": [
              "username"
            ],
            "allOf": [
              {
                "$ref": "#/components/schemas/BaseAuthorItem"
              },
              {
                "type": "object"
              }
            ]
          },
          "source_url": {
            "type": "string",
            "description": "Link to the tweet",
            "format": "url"
          },
          "topics": {
            "$ref": "#/components/schemas/ContentTopicArray",
            "description": "List of Topics identified in the content"
          },
          "entities": {
            "$ref": "#/components/schemas/ContentEntityArray",
            "description": "List of Entities identified in the content"
          }
        },
        "required": [
          "id",
          "src",
          "date",
          "content",
          "author",
          "source_url",
          "topics",
          "entities"
        ]
      },
      "YoutubeItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID representing this Youtube comment"
          },
          "src": {
            "type": "string",
            "description": "Social media source",
            "examples": [
              "youtube"
            ]
          },
          "date": {
            "type": "string",
            "description": "Date content was published",
            "format": "date-time"
          },
          "video_id": {
            "type": "string",
            "description": "Youtube's API ID for this video where this comment came from"
          },
          "content": {
            "type": "string",
            "description": "Content of the Youtube comment",
            "examples": [
              "And Biden encouraging all the migrants to go through the dangerous journey through central America and Mexico. I am sure Desantis treatment is A MILLION times better than […]."
            ]
          },
          "author": {
            "$ref": "#/components/schemas/BaseAuthorItem",
            "description": "Details about the author of this Youtube comment"
          },
          "source_url": {
            "type": "string",
            "description": "Link to the Youtube comment",
            "format": "url"
          },
          "topics": {
            "$ref": "#/components/schemas/ContentTopicArray",
            "description": "List of Topics identified in the content"
          },
          "entities": {
            "$ref": "#/components/schemas/ContentEntityArray",
            "description": "List of Entities identified in the content"
          }
        },
        "required": [
          "id",
          "src",
          "date",
          "video_id",
          "content",
          "author",
          "source_url",
          "topics",
          "entities"
        ]
      },
      "RedditItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID representing this Reddit comment"
          },
          "src": {
            "type": "string",
            "description": "Social media source",
            "examples": [
              "reddit"
            ]
          },
          "date": {
            "type": "string",
            "description": "Date content was published",
            "format": "date-time"
          },
          "subreddit": {
            "type": "string",
            "description": "Name of the subreddit where this comment came from"
          },
          "content": {
            "type": "string",
            "description": "Content of the Reddit comment"
          },
          "author": {
            "$ref": "#/components/schemas/BaseAuthorItem",
            "description": "Details about the author of this Reddit comment"
          },
          "source_url": {
            "type": "string",
            "description": "Link to the Reddit comment",
            "format": "url"
          },
          "topics": {
            "$ref": "#/components/schemas/ContentTopicArray",
            "description": "List of Topics identified in the content"
          },
          "entities": {
            "$ref": "#/components/schemas/ContentEntityArray",
            "description": "List of Entities identified in the content"
          }
        },
        "required": [
          "id",
          "src",
          "date",
          "subreddit",
          "content",
          "author",
          "source_url",
          "topics",
          "entities"
        ]
      },
      "FacebookPostItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID representing this Facebook post"
          },
          "src": {
            "type": "string",
            "description": "Social media source",
            "examples": [
              "facebook_post"
            ]
          },
          "date": {
            "type": "string",
            "description": "Date content was published",
            "format": "date-time"
          },
          "page_name": {
            "type": "string",
            "description": "Name of the Facebook Page where this post came from"
          },
          "content": {
            "type": "string",
            "description": "Content of the post"
          },
          "author": {
            "$ref": "#/components/schemas/BaseAuthorItem",
            "description": "Details about the author of this post"
          },
          "source_url": {
            "type": "string",
            "description": "Link to the post",
            "format": "url"
          },
          "topics": {
            "$ref": "#/components/schemas/ContentTopicArray",
            "description": "List of Topics identified in the post"
          },
          "entities": {
            "$ref": "#/components/schemas/ContentEntityArray",
            "description": "List of Entities identified in the post"
          }
        },
        "required": [
          "id",
          "src",
          "date",
          "page_name",
          "content",
          "author",
          "source_url",
          "topics",
          "entities"
        ]
      },
      "FacebookCommentItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID representing this Facebook comment"
          },
          "src": {
            "type": "string",
            "description": "Social media source",
            "examples": [
              "facebook_comment"
            ]
          },
          "date": {
            "type": "string",
            "description": "Date content was published",
            "format": "date-time"
          },
          "page_name": {
            "type": "string",
            "description": "Name of the Facebook Page where this comment came from"
          },
          "content": {
            "type": "string",
            "description": "Content of the comment"
          },
          "author": {
            "$ref": "#/components/schemas/BaseAuthorItem",
            "description": "Details about the author of this comment. Note: if `author_name=Facebook User` it is because Facebook as not provided us with the actual ID or Name of the user."
          },
          "source_url": {
            "type": "string",
            "description": "Link to the post where the comment was made",
            "format": "url",
            "examples": [
              "https://www.facebook.com/281413854463116"
            ]
          },
          "topics": {
            "$ref": "#/components/schemas/ContentTopicArray",
            "description": "List of Topics identified in the post"
          },
          "entities": {
            "$ref": "#/components/schemas/ContentEntityArray",
            "description": "List of Entities identified in the post"
          }
        },
        "required": [
          "id",
          "src",
          "date",
          "page_name",
          "content",
          "author",
          "source_url",
          "topics",
          "entities"
        ]
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ]
}
